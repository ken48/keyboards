0. Как я пришел к необычным клавиатурам?

	0.0. Изначально я озадачился вопросом эргономики и стиля рабочего места. После стола, монитора и кресла внимание переключилось на клавиатуру и мышь.

	0.1. С мышью все понятно: выбирай точную и удобную. А вот с клавиатурами сложнее: они все казались одинаковами, различались только по внешности. И я начал искать идеальную по эстетическим соображениям клавиатуру: круто выглядящую, с приятным филингом (тактильные ощущения при печати, приятный звук, качество материалов).

	0.2. Потом пришло понимание, что можно использовать функциональные возможности таких клавиатур. Точки роста были замечены такие:
		- точность попадания на клавиши, решается через выбор профиля кейкапов
		- длина хода клавиши - определяет стиль и скорость печати
		- общая площадь обычных полноразмерных клавиатур казалась избыточной, т.к. надо двигать руки с домашней позиции, мышь казалась где-то далеко в стороне. Поэтому хотелось компактных раскладок (75, 65 или даже 60), которые можно и нужно было донастраивать под себя.

1. К чему я пришел за 2 года поисков.

	1.1. Есть 2 типа расположения клавиш:

		- стандартные (с горизонтальным смещением рядов - привет печатным машинкам)

			- цельные обычные
			- цельные Alice - v-образное расположение клавиш
			- разделенные пополам - стандартный сплит

		- ортолинейные
			* по наличию вертикального смещения колонок:
		 		- с
		 		- без
		 	* корпус из 2-х половинок (под каждую руку):
		 		- сплиты
		 		- моноблоки (unibody)

		Популярность форматов определяется их удобством (зачем мне переучиваться) и стоимостью перехода (как долго и как больно будет проходить процесс перехода).

	1.2. Мои претензии к стандартным клавиатурам:

		- горизотальное смещение рядов. Пальцам приходится совершать движения не только вдоль и поперек колонок, но и по диагонали

		- нижний левый буквенный ряд (zxcvb) смещен вправо на 1 клавишу, из-за этого набор левой рукой страдает (мизинец не задействован, а на указательный палец больше нагрузка)

		- thumb-кластер неудобный (слишком длинный пробел, модификаторы нижнего ряда (которые рядом с пробелом) загнаны вглубь ладони - неудобно их доставать большим пальцем

	1.3. Ортолинейные клавиатуры.

		Самый эргономичный вариант - сплит с вертикальным смещением колонок.

		Мои претензии к ортолинейным сплитам с вертикальным смещением для sofle:

			- по дефолту нужно 3 слоя (дефолт с буквами, символы и навигация)
			- нет контрола под шифтом
			- цифры бы сместить поуже, чтобы справа влезли - и =
			- в идеале (есть такая клава - nuio flow):
				* иметь отдельные стрелки, чтобы вообще не пользоваться вторым рядом
				* и еще одну колонку на правой стороне, чтобы там влезли квадратные скобки, бэкспейс и энтер
				* ну и можно было бы f-row в самый верх запихнуть

2. Что я сделал в итоге?

	2.1. Стандартная клавиатура только в ISO раскладке, потому что:

		- можно сделать angle-mod: сместить левую половину нижнего буквенного ряда влево для достижения симметрии движения при наборе на правой и левой половинах

		- на длинный сосисочный энтер в ANSI я все время случайно попадаю мизинцем при наборе русской буквы "Э" или англ кавычки

	2.2. По стандартной раскладке - для программиста это 75%. Потому что нужны стрелки для работы с текстом и F-ряд для стандартных хоткеев в файловом менеджере и средах разработки. 

	2.3. Максимально низкий профиль. Никакого высокого профиля, чтобы загибать ладонь кверху. Никаких длинноходных свичей только самые короткоходные. Капы самый низкий профиль, потому что техника печати скользящая. Да, это незначительно увеличивает количество ошибок, но филинг, когда пальцы буквально парят над клавиатурой очень приятное. Вообще не устаю. Чтобы ощущение полета сложилось, нужны еще очень легкие свичи. Такие есть только у Kailh - choc v1 25 гр - purple, есть еще pink 20 гр, но для меня это слишком. Возможно, для миниатюрных девушек с тонкими и невесомыми пальцами подойдет. 

	2.4. Ортолинейная - сплит с вертикальным смещением. Поиск раскладки занимает очень много времени. Не менее 58 клавиш, чтобы не нужно было поддерживать отдельный символьный слой. С отдельным символьным слоем переучиваться на него очень долго. А сам процесс отъедает очень много умственной энергии. Работа за такой клавиатурой превращается в разновидность ментальной гимнастики. Причем в моем случае месяц, два, три - все равно тяжело, чтобы ни говорили ангажированные идеей, что они за неделю привыкли и все нормально. Хотя, может, я просто туповат?..

	2.5. Использую middleware:

		- настроил русскую раскладку в ОС так, чтобы часть символов по шифтам на цифровом ряду была как на английской (бесполезный в русской раскладке русский символ "номер" или точка с запятой. Также Alt и Alt-Shift - полностью английская раскладка, что очень удобно для того, чтобы набрать короткие строки на англ или пунктуацию, не переключая языки.

		- использую софт для замены сочетания клавиш на уровне ОС. На маке - это Karabiner. Например, отключить капс-лок, fn клавишу, более хитрые кейсы. Например, правый комманд эмулирует переключение слоя (при сочетании с пробелом ставит запятую и пробел, потому что при работе с натуральными текстами это самый частый кейс, а если делать это перекатом с левым шифтом, то ставится точка, пробел и активируется sticky shift, чтобы предложение автоматом начиналось с большой буквы).

		- в самой операционной системе можно убрать неудобные хоткеи, например, f11 - показ рабочего стола, через раздвигание всех окон за экран, убрать смену языка по нажатию на fn, отключить замену двойного пробела на точку, поставить No Action на Caps Lock

	2.6. Разное

		- На орто-сплите хорошо иметь раскладку, близкую к стандарту, тогда и переход на сплит будет быстрым, и обратно - тоже (когда надо за ноутом посидеть)

		- Шифт - самый удобный модификатор. Хорошо его держать и справа и слева. Можно даже через middleware сделать, чтобы shift + backspace давали эффект удаления слова.

		- модификаторы cmd и option лучше держать по одну сторону. Так удобнее работать с навигационным слоем.

		- на ортосплите вынес backspace на навигационный слой - прям очень удобно. На этом же слое переключение языка. В итоге это соответствует полностью самому процессу: ошибся с языком -> не отпуская клавишу слоя удалил -> не отпуская клавишу слоя переключил язык. Так же с навигацией: обычно стрелками ищем место замены, там же на этом же слое удаляем backspace или delete.

		- энтер - опасная клавиша. В мессенджерах по энтеру отправляется сообщение. Если рядом с энетером будет популярная клавиша, например, активация слоя, на котором стирание, то часто будут досадные промахи с отправкой недописанных или ошибочных сообщений. В этом случае стоит на энтер поместить свич с более тяжелой механикой. Например, я на клавиатуре использую одни из самых легких линейных свичей. Вероятность ошибки на них выше. Но для энтера можно поставить вдвое более тяжелый свич с тактильной механикой.

		- home row mods для ортосплитов - красивая идея, но нежизнеспособная. Даже на небольшой скорости нажатие может происходить при неполном отпускании предыдущей клавиши (набор "перекатом").

		- существует еще идея не просто переключать язык, а переключать на конкретный. Например, одна клавиша - англ, другая - рус. Но на практике, мозг работает гораздо проще: начал печатать -> понял "не то" -> переключил. А если у каждого языка свой хоткей или клавиша, то потом возникает вопрос "а что должно быть?" И это тратит драгоценное мыслетопливо. Еще раз подчеркну, что так как скорость набора достаточно высока, то эти вопросы должны ставиться и решаться буквально за миллисекунды, да еще и не отвлекая мозг от основной идея. Ведь идея - это главное, а клавиатура - всего лишь инструмент.

		- при разработке раскладок надо в первую очередь сформулировать свои use cases. Например, работа с natural language текстами (на каком языке), работа с кодом, с хоткеями в операционной системе, терминал, vim и тд. Ведь клавиатура - это инструмент, и инструмент должен быть настроен для той работы, которая на нем подразуемевается.

		- отключить emoji & symbols по хоткею "ctl + cmd + space", близкому к переключению языка: Settings > Keyboard > App Shortcuts > All Applications: вводим строкой имя меню Emoji & Symbols и задаем какой-нибудь левый хоткей, который очень сложно будет случайно нажать.
